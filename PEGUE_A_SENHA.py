{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/SandersonSB/Pega-Senha-Project/blob/main/PEGUE_A_SENHA.py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "0i7eb9o18zK_"
      },
      "source": [
        "**PEGA A SENHA!!**"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "467eAzsvIjzs"
      },
      "source": [
        "Lendo o aqrquivo de forma simples"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "JMaLG32GInTU"
      },
      "source": [
        "Checando o DataFrame\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "3oQqxqWC8x_Z"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import warnings\n",
        "import itertools\n",
        "from statsmodels.tsa.arima.model import ARIMA\n",
        "from datetime import timedelta\n",
        "\n",
        "url = 'https://raw.githubusercontent.com/SandersonSB/Pega-Senha-Project/main/BRA.csv'\n",
        "df = pd.read_csv(url)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 235
        },
        "id": "8MQ7XHDHIqdM",
        "outputId": "6ad07992-423e-44dc-f4a8-d180ea5274c1"
      },
      "outputs": [
        {
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df"
            },
            "text/html": [
              "\n",
              "  <div id=\"df-ee8131f9-9ef4-4a01-bede-d78c3fda686d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Country</th>\n",
              "      <th>League</th>\n",
              "      <th>Season</th>\n",
              "      <th>Date</th>\n",
              "      <th>Time</th>\n",
              "      <th>Home</th>\n",
              "      <th>Away</th>\n",
              "      <th>HG</th>\n",
              "      <th>AG</th>\n",
              "      <th>Res</th>\n",
              "      <th>...</th>\n",
              "      <th>PSCA</th>\n",
              "      <th>MaxCH</th>\n",
              "      <th>MaxCD</th>\n",
              "      <th>MaxCA</th>\n",
              "      <th>AvgCH</th>\n",
              "      <th>AvgCD</th>\n",
              "      <th>AvgCA</th>\n",
              "      <th>BFECH</th>\n",
              "      <th>BFECD</th>\n",
              "      <th>BFECA</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>19/05/2012</td>\n",
              "      <td>22:30</td>\n",
              "      <td>Palmeiras</td>\n",
              "      <td>Portuguesa</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>D</td>\n",
              "      <td>...</td>\n",
              "      <td>5.25</td>\n",
              "      <td>1.76</td>\n",
              "      <td>3.87</td>\n",
              "      <td>5.31</td>\n",
              "      <td>1.69</td>\n",
              "      <td>3.50</td>\n",
              "      <td>4.90</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>19/05/2012</td>\n",
              "      <td>22:30</td>\n",
              "      <td>Sport Recife</td>\n",
              "      <td>Flamengo RJ</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>D</td>\n",
              "      <td>...</td>\n",
              "      <td>2.68</td>\n",
              "      <td>2.83</td>\n",
              "      <td>3.42</td>\n",
              "      <td>2.70</td>\n",
              "      <td>2.59</td>\n",
              "      <td>3.23</td>\n",
              "      <td>2.58</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>20/05/2012</td>\n",
              "      <td>01:00</td>\n",
              "      <td>Figueirense</td>\n",
              "      <td>Nautico</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>H</td>\n",
              "      <td>...</td>\n",
              "      <td>6.72</td>\n",
              "      <td>1.67</td>\n",
              "      <td>4.05</td>\n",
              "      <td>7.22</td>\n",
              "      <td>1.59</td>\n",
              "      <td>3.67</td>\n",
              "      <td>5.64</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>20/05/2012</td>\n",
              "      <td>20:00</td>\n",
              "      <td>Botafogo RJ</td>\n",
              "      <td>Sao Paulo</td>\n",
              "      <td>4.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>H</td>\n",
              "      <td>...</td>\n",
              "      <td>3.15</td>\n",
              "      <td>2.49</td>\n",
              "      <td>3.39</td>\n",
              "      <td>3.15</td>\n",
              "      <td>2.35</td>\n",
              "      <td>3.26</td>\n",
              "      <td>2.84</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>20/05/2012</td>\n",
              "      <td>20:00</td>\n",
              "      <td>Corinthians</td>\n",
              "      <td>Fluminense</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>A</td>\n",
              "      <td>...</td>\n",
              "      <td>4.41</td>\n",
              "      <td>1.96</td>\n",
              "      <td>3.53</td>\n",
              "      <td>4.41</td>\n",
              "      <td>1.89</td>\n",
              "      <td>3.33</td>\n",
              "      <td>3.89</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows Ã— 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ee8131f9-9ef4-4a01-bede-d78c3fda686d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ee8131f9-9ef4-4a01-bede-d78c3fda686d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ee8131f9-9ef4-4a01-bede-d78c3fda686d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-00324096-0f63-4f37-aa1e-d4451bafa9c2\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-00324096-0f63-4f37-aa1e-d4451bafa9c2')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-00324096-0f63-4f37-aa1e-d4451bafa9c2 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "  Country   League  Season        Date   Time          Home         Away   HG  \\\n",
              "0  Brazil  Serie A    2012  19/05/2012  22:30     Palmeiras   Portuguesa  1.0   \n",
              "1  Brazil  Serie A    2012  19/05/2012  22:30  Sport Recife  Flamengo RJ  1.0   \n",
              "2  Brazil  Serie A    2012  20/05/2012  01:00   Figueirense      Nautico  2.0   \n",
              "3  Brazil  Serie A    2012  20/05/2012  20:00   Botafogo RJ    Sao Paulo  4.0   \n",
              "4  Brazil  Serie A    2012  20/05/2012  20:00   Corinthians   Fluminense  0.0   \n",
              "\n",
              "    AG Res  ...  PSCA  MaxCH  MaxCD  MaxCA  AvgCH  AvgCD  AvgCA  BFECH  BFECD  \\\n",
              "0  1.0   D  ...  5.25   1.76   3.87   5.31   1.69   3.50   4.90    NaN    NaN   \n",
              "1  1.0   D  ...  2.68   2.83   3.42   2.70   2.59   3.23   2.58    NaN    NaN   \n",
              "2  1.0   H  ...  6.72   1.67   4.05   7.22   1.59   3.67   5.64    NaN    NaN   \n",
              "3  2.0   H  ...  3.15   2.49   3.39   3.15   2.35   3.26   2.84    NaN    NaN   \n",
              "4  1.0   A  ...  4.41   1.96   3.53   4.41   1.89   3.33   3.89    NaN    NaN   \n",
              "\n",
              "   BFECA  \n",
              "0    NaN  \n",
              "1    NaN  \n",
              "2    NaN  \n",
              "3    NaN  \n",
              "4    NaN  \n",
              "\n",
              "[5 rows x 22 columns]"
            ]
          },
          "execution_count": 3,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df.head()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4Xjb4Y-FbgZB"
      },
      "source": [
        "**Incialmente criando id dos times**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 320
        },
        "id": "lxSs0zyPbnxl",
        "outputId": "de52c517-633f-4480-a326-70d2d2c8655c"
      },
      "outputs": [
        {
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Season\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1363.0019310356354,\n        \"min\": 3.8227556312557303,\n        \"max\": 5030.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2018.1252485089462,\n          2018.0,\n          5030.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HG\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1777.3358245281383,\n        \"min\": 0.0,\n        \"max\": 5029.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          5029.0,\n          1.414993040365878,\n          2.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AG\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1777.5191433789805,\n        \"min\": 0.0,\n        \"max\": 5029.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          5029.0,\n          0.9596341220918672,\n          6.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PSCH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1776.5934660416858,\n        \"min\": 0.9490662020873205,\n        \"max\": 5029.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2.3089759395506064,\n          2.08,\n          5029.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PSCD\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1776.5272501514646,\n        \"min\": 0.6522660236503942,\n        \"max\": 5029.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.638013521574866,\n          3.45,\n          5029.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PSCA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1775.4889649105608,\n        \"min\": 1.15,\n        \"max\": 5029.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          4.673511632531318,\n          4.03,\n          5029.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MaxCH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1776.3722101954168,\n        \"min\": 1.0504961759218867,\n        \"max\": 5030.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2.388787276341948,\n          2.15,\n          5030.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MaxCD\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1776.8434196775718,\n        \"min\": 0.6788891765236095,\n        \"max\": 5030.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.7439681908548708,\n          3.53,\n          5030.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MaxCA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1775.5388285276592,\n        \"min\": 0.0,\n        \"max\": 5030.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          4.915892644135188,\n          4.16,\n          5030.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AvgCH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1776.836886629204,\n        \"min\": 0.884163296574847,\n        \"max\": 5030.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2.235308151093439,\n          2.03,\n          5030.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AvgCD\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1776.987286832217,\n        \"min\": 0.5703945989242613,\n        \"max\": 5030.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.4856918489065603,\n          3.3,\n          5030.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AvgCA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1776.065235207585,\n        \"min\": 1.15,\n        \"max\": 5030.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          4.328023856858847,\n          3.76,\n          5030.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BFECH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 113.86697516600783,\n        \"min\": 1.0458555815388175,\n        \"max\": 325.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2.4016615384615383,\n          2.16,\n          325.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BFECD\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 113.65363160797624,\n        \"min\": 0.6476768433773853,\n        \"max\": 325.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.6421230769230766,\n          3.45,\n          325.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BFECA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 112.94594157932329,\n        \"min\": 1.39,\n        \"max\": 325.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          4.819415384615384,\n          4.1,\n          325.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}",
              "type": "dataframe"
            },
            "text/html": [
              "\n",
              "  <div id=\"df-48607e29-905c-46c4-ad51-d0f9ac03144f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Season</th>\n",
              "      <th>HG</th>\n",
              "      <th>AG</th>\n",
              "      <th>PSCH</th>\n",
              "      <th>PSCD</th>\n",
              "      <th>PSCA</th>\n",
              "      <th>MaxCH</th>\n",
              "      <th>MaxCD</th>\n",
              "      <th>MaxCA</th>\n",
              "      <th>AvgCH</th>\n",
              "      <th>AvgCD</th>\n",
              "      <th>AvgCA</th>\n",
              "      <th>BFECH</th>\n",
              "      <th>BFECD</th>\n",
              "      <th>BFECA</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>5030.000000</td>\n",
              "      <td>5029.000000</td>\n",
              "      <td>5029.000000</td>\n",
              "      <td>5029.000000</td>\n",
              "      <td>5029.000000</td>\n",
              "      <td>5029.000000</td>\n",
              "      <td>5030.000000</td>\n",
              "      <td>5030.000000</td>\n",
              "      <td>5030.000000</td>\n",
              "      <td>5030.000000</td>\n",
              "      <td>5030.000000</td>\n",
              "      <td>5030.000000</td>\n",
              "      <td>325.000000</td>\n",
              "      <td>325.000000</td>\n",
              "      <td>325.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>2018.125249</td>\n",
              "      <td>1.414993</td>\n",
              "      <td>0.959634</td>\n",
              "      <td>2.308976</td>\n",
              "      <td>3.638014</td>\n",
              "      <td>4.673512</td>\n",
              "      <td>2.388787</td>\n",
              "      <td>3.743968</td>\n",
              "      <td>4.915893</td>\n",
              "      <td>2.235308</td>\n",
              "      <td>3.485692</td>\n",
              "      <td>4.328024</td>\n",
              "      <td>2.401662</td>\n",
              "      <td>3.642123</td>\n",
              "      <td>4.819415</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>3.822756</td>\n",
              "      <td>1.156500</td>\n",
              "      <td>0.977349</td>\n",
              "      <td>0.949066</td>\n",
              "      <td>0.652266</td>\n",
              "      <td>2.463423</td>\n",
              "      <td>1.050496</td>\n",
              "      <td>0.678889</td>\n",
              "      <td>2.728255</td>\n",
              "      <td>0.884163</td>\n",
              "      <td>0.570395</td>\n",
              "      <td>2.124894</td>\n",
              "      <td>1.045856</td>\n",
              "      <td>0.647677</td>\n",
              "      <td>2.609659</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>2012.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.080000</td>\n",
              "      <td>2.540000</td>\n",
              "      <td>1.150000</td>\n",
              "      <td>1.090000</td>\n",
              "      <td>2.630000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.070000</td>\n",
              "      <td>2.510000</td>\n",
              "      <td>1.150000</td>\n",
              "      <td>1.220000</td>\n",
              "      <td>2.880000</td>\n",
              "      <td>1.390000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>2015.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.700000</td>\n",
              "      <td>3.250000</td>\n",
              "      <td>2.990000</td>\n",
              "      <td>1.750000</td>\n",
              "      <td>3.330000</td>\n",
              "      <td>3.060000</td>\n",
              "      <td>1.670000</td>\n",
              "      <td>3.150000</td>\n",
              "      <td>2.860000</td>\n",
              "      <td>1.770000</td>\n",
              "      <td>3.250000</td>\n",
              "      <td>3.100000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>2018.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>2.080000</td>\n",
              "      <td>3.450000</td>\n",
              "      <td>4.030000</td>\n",
              "      <td>2.150000</td>\n",
              "      <td>3.530000</td>\n",
              "      <td>4.160000</td>\n",
              "      <td>2.030000</td>\n",
              "      <td>3.300000</td>\n",
              "      <td>3.760000</td>\n",
              "      <td>2.160000</td>\n",
              "      <td>3.450000</td>\n",
              "      <td>4.100000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>2021.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>2.620000</td>\n",
              "      <td>3.840000</td>\n",
              "      <td>5.700000</td>\n",
              "      <td>2.700000</td>\n",
              "      <td>3.950000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>2.540000</td>\n",
              "      <td>3.660000</td>\n",
              "      <td>5.280000</td>\n",
              "      <td>2.680000</td>\n",
              "      <td>3.800000</td>\n",
              "      <td>5.800000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>2025.000000</td>\n",
              "      <td>7.000000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>17.680000</td>\n",
              "      <td>12.250000</td>\n",
              "      <td>29.580000</td>\n",
              "      <td>29.000000</td>\n",
              "      <td>12.500000</td>\n",
              "      <td>36.000000</td>\n",
              "      <td>20.230000</td>\n",
              "      <td>10.820000</td>\n",
              "      <td>26.580000</td>\n",
              "      <td>10.000000</td>\n",
              "      <td>7.400000</td>\n",
              "      <td>20.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-48607e29-905c-46c4-ad51-d0f9ac03144f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-48607e29-905c-46c4-ad51-d0f9ac03144f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-48607e29-905c-46c4-ad51-d0f9ac03144f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-80173eb1-e943-4590-92ed-1acef6917314\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-80173eb1-e943-4590-92ed-1acef6917314')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-80173eb1-e943-4590-92ed-1acef6917314 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "            Season           HG           AG         PSCH         PSCD  \\\n",
              "count  5030.000000  5029.000000  5029.000000  5029.000000  5029.000000   \n",
              "mean   2018.125249     1.414993     0.959634     2.308976     3.638014   \n",
              "std       3.822756     1.156500     0.977349     0.949066     0.652266   \n",
              "min    2012.000000     0.000000     0.000000     1.080000     2.540000   \n",
              "25%    2015.000000     1.000000     0.000000     1.700000     3.250000   \n",
              "50%    2018.000000     1.000000     1.000000     2.080000     3.450000   \n",
              "75%    2021.000000     2.000000     1.000000     2.620000     3.840000   \n",
              "max    2025.000000     7.000000     6.000000    17.680000    12.250000   \n",
              "\n",
              "              PSCA        MaxCH        MaxCD        MaxCA        AvgCH  \\\n",
              "count  5029.000000  5030.000000  5030.000000  5030.000000  5030.000000   \n",
              "mean      4.673512     2.388787     3.743968     4.915893     2.235308   \n",
              "std       2.463423     1.050496     0.678889     2.728255     0.884163   \n",
              "min       1.150000     1.090000     2.630000     0.000000     1.070000   \n",
              "25%       2.990000     1.750000     3.330000     3.060000     1.670000   \n",
              "50%       4.030000     2.150000     3.530000     4.160000     2.030000   \n",
              "75%       5.700000     2.700000     3.950000     6.000000     2.540000   \n",
              "max      29.580000    29.000000    12.500000    36.000000    20.230000   \n",
              "\n",
              "             AvgCD        AvgCA       BFECH       BFECD       BFECA  \n",
              "count  5030.000000  5030.000000  325.000000  325.000000  325.000000  \n",
              "mean      3.485692     4.328024    2.401662    3.642123    4.819415  \n",
              "std       0.570395     2.124894    1.045856    0.647677    2.609659  \n",
              "min       2.510000     1.150000    1.220000    2.880000    1.390000  \n",
              "25%       3.150000     2.860000    1.770000    3.250000    3.100000  \n",
              "50%       3.300000     3.760000    2.160000    3.450000    4.100000  \n",
              "75%       3.660000     5.280000    2.680000    3.800000    5.800000  \n",
              "max      10.820000    26.580000   10.000000    7.400000   20.000000  "
            ]
          },
          "execution_count": 4,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "\n",
        "\n",
        "df.describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "tgsNHpzTcUyD",
        "outputId": "18b73025-4393-4d8d-b75e-acdb0d60df8f"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "             Home  Home Team ID           Away  Away Team ID\n",
            "0       Palmeiras          3090     Portuguesa          3102\n",
            "1    Sport Recife          3091    Flamengo RJ          3101\n",
            "2     Figueirense          3092        Nautico          3103\n",
            "3     Botafogo RJ          3093      Sao Paulo          3107\n",
            "4     Corinthians          3094     Fluminense          3108\n",
            "5   Internacional          3095       Coritiba          3105\n",
            "6     Ponte Preta          3096    Atletico-MG          3104\n",
            "7           Bahia          3097         Santos          3106\n",
            "8        Cruzeiro          3098    Atletico GO          3100\n",
            "9           Vasco          3099         Gremio          3109\n",
            "10    Atletico GO          3100    Ponte Preta          3096\n",
            "11    Flamengo RJ          3101  Internacional          3095\n",
            "12     Portuguesa          3102          Vasco          3099\n",
            "13        Nautico          3103       Cruzeiro          3098\n",
            "14    Atletico-MG          3104    Corinthians          3094\n",
            "15       Coritiba          3105    Botafogo RJ          3093\n",
            "16         Santos          3106   Sport Recife          3091\n",
            "17      Sao Paulo          3107          Bahia          3097\n",
            "18     Fluminense          3108    Figueirense          3092\n",
            "19         Gremio          3109      Palmeiras          3090\n",
            "20    Atletico GO          3100         Gremio          3109\n",
            "21   Sport Recife          3091      Palmeiras          3090\n",
            "22    Atletico-MG          3104          Bahia          3097\n",
            "23       Coritiba          3105     Portuguesa          3102\n",
            "24          Vasco          3099        Nautico          3103\n",
            "25  Internacional          3095      Sao Paulo          3107\n",
            "26    Ponte Preta          3096    Flamengo RJ          3101\n",
            "27         Santos          3106     Fluminense          3108\n",
            "28    Botafogo RJ          3093       Cruzeiro          3098\n",
            "29    Corinthians          3094    Figueirense          3092\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Country   League  Season        Date   Time           Home           Away  \\\n",
              "0   Brazil  Serie A    2012  19/05/2012  22:30      Palmeiras     Portuguesa   \n",
              "1   Brazil  Serie A    2012  19/05/2012  22:30   Sport Recife    Flamengo RJ   \n",
              "2   Brazil  Serie A    2012  20/05/2012  01:00    Figueirense        Nautico   \n",
              "3   Brazil  Serie A    2012  20/05/2012  20:00    Botafogo RJ      Sao Paulo   \n",
              "4   Brazil  Serie A    2012  20/05/2012  20:00    Corinthians     Fluminense   \n",
              "5   Brazil  Serie A    2012  20/05/2012  20:00  Internacional       Coritiba   \n",
              "6   Brazil  Serie A    2012  20/05/2012  20:00    Ponte Preta    Atletico-MG   \n",
              "7   Brazil  Serie A    2012  20/05/2012  22:30          Bahia         Santos   \n",
              "8   Brazil  Serie A    2012  20/05/2012  22:30       Cruzeiro    Atletico GO   \n",
              "9   Brazil  Serie A    2012  20/05/2012  22:30          Vasco         Gremio   \n",
              "10  Brazil  Serie A    2012  26/05/2012  22:30    Atletico GO    Ponte Preta   \n",
              "11  Brazil  Serie A    2012  26/05/2012  22:30    Flamengo RJ  Internacional   \n",
              "12  Brazil  Serie A    2012  26/05/2012  22:30     Portuguesa          Vasco   \n",
              "13  Brazil  Serie A    2012  27/05/2012  01:00        Nautico       Cruzeiro   \n",
              "14  Brazil  Serie A    2012  27/05/2012  20:00    Atletico-MG    Corinthians   \n",
              "15  Brazil  Serie A    2012  27/05/2012  20:00       Coritiba    Botafogo RJ   \n",
              "16  Brazil  Serie A    2012  27/05/2012  20:00         Santos   Sport Recife   \n",
              "17  Brazil  Serie A    2012  27/05/2012  20:00      Sao Paulo          Bahia   \n",
              "18  Brazil  Serie A    2012  27/05/2012  22:30     Fluminense    Figueirense   \n",
              "19  Brazil  Serie A    2012  27/05/2012  22:30         Gremio      Palmeiras   \n",
              "20  Brazil  Serie A    2012  06/06/2012  23:30    Atletico GO         Gremio   \n",
              "21  Brazil  Serie A    2012  06/06/2012  23:30   Sport Recife      Palmeiras   \n",
              "22  Brazil  Serie A    2012  07/06/2012  00:30    Atletico-MG          Bahia   \n",
              "23  Brazil  Serie A    2012  07/06/2012  00:30       Coritiba     Portuguesa   \n",
              "24  Brazil  Serie A    2012  07/06/2012  00:30          Vasco        Nautico   \n",
              "25  Brazil  Serie A    2012  07/06/2012  01:50  Internacional      Sao Paulo   \n",
              "26  Brazil  Serie A    2012  07/06/2012  01:50    Ponte Preta    Flamengo RJ   \n",
              "27  Brazil  Serie A    2012  07/06/2012  01:50         Santos     Fluminense   \n",
              "28  Brazil  Serie A    2012  08/06/2012  01:00    Botafogo RJ       Cruzeiro   \n",
              "29  Brazil  Serie A    2012  08/06/2012  01:00    Corinthians    Figueirense   \n",
              "\n",
              "     HG   AG Res  ...  MaxCA  AvgCH  AvgCD  AvgCA  BFECH  BFECD  BFECA  \\\n",
              "0   1.0  1.0   D  ...   5.31   1.69   3.50   4.90    NaN    NaN    NaN   \n",
              "1   1.0  1.0   D  ...   2.70   2.59   3.23   2.58    NaN    NaN    NaN   \n",
              "2   2.0  1.0   H  ...   7.22   1.59   3.67   5.64    NaN    NaN    NaN   \n",
              "3   4.0  2.0   H  ...   3.15   2.35   3.26   2.84    NaN    NaN    NaN   \n",
              "4   0.0  1.0   A  ...   4.41   1.89   3.33   3.89    NaN    NaN    NaN   \n",
              "5   2.0  0.0   H  ...   6.00   1.66   3.55   5.10    NaN    NaN    NaN   \n",
              "6   0.0  1.0   A  ...   2.62   2.74   3.23   2.45    NaN    NaN    NaN   \n",
              "7   0.0  0.0   D  ...   3.32   2.30   3.22   2.97    NaN    NaN    NaN   \n",
              "8   0.0  0.0   D  ...   4.82   1.78   3.47   4.30    NaN    NaN    NaN   \n",
              "9   2.0  1.0   H  ...   3.64   2.08   3.25   3.41    NaN    NaN    NaN   \n",
              "10  1.0  1.0   D  ...   5.79   1.66   3.59   5.04    NaN    NaN    NaN   \n",
              "11  3.0  3.0   D  ...   4.20   1.99   3.23   3.74    NaN    NaN    NaN   \n",
              "12  0.0  1.0   A  ...   2.70   2.62   3.22   2.54    NaN    NaN    NaN   \n",
              "13  0.0  0.0   D  ...   2.80   2.67   3.18   2.55    NaN    NaN    NaN   \n",
              "14  1.0  0.0   H  ...   4.09   2.08   3.28   3.43    NaN    NaN    NaN   \n",
              "15  2.0  3.0   A  ...   4.84   1.77   3.60   4.15    NaN    NaN    NaN   \n",
              "16  0.0  0.0   D  ...   9.52   1.41   4.17   7.46    NaN    NaN    NaN   \n",
              "17  1.0  0.0   H  ...   7.91   1.44   4.12   6.93    NaN    NaN    NaN   \n",
              "18  2.0  2.0   D  ...   6.02   1.65   3.61   5.08    NaN    NaN    NaN   \n",
              "19  1.0  0.0   H  ...   4.26   1.97   3.33   3.66    NaN    NaN    NaN   \n",
              "20  0.0  1.0   A  ...   3.27   2.28   3.26   2.96    NaN    NaN    NaN   \n",
              "21  2.0  1.0   H  ...   2.90   2.46   3.17   2.77    NaN    NaN    NaN   \n",
              "22  1.0  1.0   D  ...   9.00   1.43   4.13   7.23    NaN    NaN    NaN   \n",
              "23  2.0  0.0   H  ...   6.00   1.59   3.72   5.37    NaN    NaN    NaN   \n",
              "24  4.0  2.0   H  ...  10.00   1.37   4.40   8.19    NaN    NaN    NaN   \n",
              "25  1.0  0.0   H  ...   4.75   1.86   3.41   4.03    NaN    NaN    NaN   \n",
              "26  2.0  2.0   D  ...   2.94   2.55   3.21   2.67    NaN    NaN    NaN   \n",
              "27  1.0  1.0   D  ...   4.00   2.02   3.23   3.63    NaN    NaN    NaN   \n",
              "28  2.0  3.0   A  ...   4.09   2.02   3.32   3.58    NaN    NaN    NaN   \n",
              "29  1.0  1.0   D  ...   6.50   1.56   3.77   5.68    NaN    NaN    NaN   \n",
              "\n",
              "    Home Team ID  Away Team ID  Cod Match  \n",
              "0           3090          3102  3090-3102  \n",
              "1           3091          3101  3091-3101  \n",
              "2           3092          3103  3092-3103  \n",
              "3           3093          3107  3093-3107  \n",
              "4           3094          3108  3094-3108  \n",
              "5           3095          3105  3095-3105  \n",
              "6           3096          3104  3096-3104  \n",
              "7           3097          3106  3097-3106  \n",
              "8           3098          3100  3098-3100  \n",
              "9           3099          3109  3099-3109  \n",
              "10          3100          3096  3100-3096  \n",
              "11          3101          3095  3101-3095  \n",
              "12          3102          3099  3102-3099  \n",
              "13          3103          3098  3103-3098  \n",
              "14          3104          3094  3104-3094  \n",
              "15          3105          3093  3105-3093  \n",
              "16          3106          3091  3106-3091  \n",
              "17          3107          3097  3107-3097  \n",
              "18          3108          3092  3108-3092  \n",
              "19          3109          3090  3109-3090  \n",
              "20          3100          3109  3100-3109  \n",
              "21          3091          3090  3091-3090  \n",
              "22          3104          3097  3104-3097  \n",
              "23          3105          3102  3105-3102  \n",
              "24          3099          3103  3099-3103  \n",
              "25          3095          3107  3095-3107  \n",
              "26          3096          3101  3096-3101  \n",
              "27          3106          3108  3106-3108  \n",
              "28          3093          3098  3093-3098  \n",
              "29          3094          3092  3094-3092  \n",
              "\n",
              "[30 rows x 25 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4ae1bd23-6c92-49b8-a0d9-6e3ed72703eb\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Country</th>\n",
              "      <th>League</th>\n",
              "      <th>Season</th>\n",
              "      <th>Date</th>\n",
              "      <th>Time</th>\n",
              "      <th>Home</th>\n",
              "      <th>Away</th>\n",
              "      <th>HG</th>\n",
              "      <th>AG</th>\n",
              "      <th>Res</th>\n",
              "      <th>...</th>\n",
              "      <th>MaxCA</th>\n",
              "      <th>AvgCH</th>\n",
              "      <th>AvgCD</th>\n",
              "      <th>AvgCA</th>\n",
              "      <th>BFECH</th>\n",
              "      <th>BFECD</th>\n",
              "      <th>BFECA</th>\n",
              "      <th>Home Team ID</th>\n",
              "      <th>Away Team ID</th>\n",
              "      <th>Cod Match</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>19/05/2012</td>\n",
              "      <td>22:30</td>\n",
              "      <td>Palmeiras</td>\n",
              "      <td>Portuguesa</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>D</td>\n",
              "      <td>...</td>\n",
              "      <td>5.31</td>\n",
              "      <td>1.69</td>\n",
              "      <td>3.50</td>\n",
              "      <td>4.90</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3090</td>\n",
              "      <td>3102</td>\n",
              "      <td>3090-3102</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>19/05/2012</td>\n",
              "      <td>22:30</td>\n",
              "      <td>Sport Recife</td>\n",
              "      <td>Flamengo RJ</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>D</td>\n",
              "      <td>...</td>\n",
              "      <td>2.70</td>\n",
              "      <td>2.59</td>\n",
              "      <td>3.23</td>\n",
              "      <td>2.58</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3091</td>\n",
              "      <td>3101</td>\n",
              "      <td>3091-3101</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>20/05/2012</td>\n",
              "      <td>01:00</td>\n",
              "      <td>Figueirense</td>\n",
              "      <td>Nautico</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>H</td>\n",
              "      <td>...</td>\n",
              "      <td>7.22</td>\n",
              "      <td>1.59</td>\n",
              "      <td>3.67</td>\n",
              "      <td>5.64</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3092</td>\n",
              "      <td>3103</td>\n",
              "      <td>3092-3103</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>20/05/2012</td>\n",
              "      <td>20:00</td>\n",
              "      <td>Botafogo RJ</td>\n",
              "      <td>Sao Paulo</td>\n",
              "      <td>4.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>H</td>\n",
              "      <td>...</td>\n",
              "      <td>3.15</td>\n",
              "      <td>2.35</td>\n",
              "      <td>3.26</td>\n",
              "      <td>2.84</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3093</td>\n",
              "      <td>3107</td>\n",
              "      <td>3093-3107</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>20/05/2012</td>\n",
              "      <td>20:00</td>\n",
              "      <td>Corinthians</td>\n",
              "      <td>Fluminense</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>A</td>\n",
              "      <td>...</td>\n",
              "      <td>4.41</td>\n",
              "      <td>1.89</td>\n",
              "      <td>3.33</td>\n",
              "      <td>3.89</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3094</td>\n",
              "      <td>3108</td>\n",
              "      <td>3094-3108</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>20/05/2012</td>\n",
              "      <td>20:00</td>\n",
              "      <td>Internacional</td>\n",
              "      <td>Coritiba</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>H</td>\n",
              "      <td>...</td>\n",
              "      <td>6.00</td>\n",
              "      <td>1.66</td>\n",
              "      <td>3.55</td>\n",
              "      <td>5.10</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3095</td>\n",
              "      <td>3105</td>\n",
              "      <td>3095-3105</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>20/05/2012</td>\n",
              "      <td>20:00</td>\n",
              "      <td>Ponte Preta</td>\n",
              "      <td>Atletico-MG</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>A</td>\n",
              "      <td>...</td>\n",
              "      <td>2.62</td>\n",
              "      <td>2.74</td>\n",
              "      <td>3.23</td>\n",
              "      <td>2.45</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3096</td>\n",
              "      <td>3104</td>\n",
              "      <td>3096-3104</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>20/05/2012</td>\n",
              "      <td>22:30</td>\n",
              "      <td>Bahia</td>\n",
              "      <td>Santos</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>D</td>\n",
              "      <td>...</td>\n",
              "      <td>3.32</td>\n",
              "      <td>2.30</td>\n",
              "      <td>3.22</td>\n",
              "      <td>2.97</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3097</td>\n",
              "      <td>3106</td>\n",
              "      <td>3097-3106</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>20/05/2012</td>\n",
              "      <td>22:30</td>\n",
              "      <td>Cruzeiro</td>\n",
              "      <td>Atletico GO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>D</td>\n",
              "      <td>...</td>\n",
              "      <td>4.82</td>\n",
              "      <td>1.78</td>\n",
              "      <td>3.47</td>\n",
              "      <td>4.30</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3098</td>\n",
              "      <td>3100</td>\n",
              "      <td>3098-3100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>20/05/2012</td>\n",
              "      <td>22:30</td>\n",
              "      <td>Vasco</td>\n",
              "      <td>Gremio</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>H</td>\n",
              "      <td>...</td>\n",
              "      <td>3.64</td>\n",
              "      <td>2.08</td>\n",
              "      <td>3.25</td>\n",
              "      <td>3.41</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3099</td>\n",
              "      <td>3109</td>\n",
              "      <td>3099-3109</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>26/05/2012</td>\n",
              "      <td>22:30</td>\n",
              "      <td>Atletico GO</td>\n",
              "      <td>Ponte Preta</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>D</td>\n",
              "      <td>...</td>\n",
              "      <td>5.79</td>\n",
              "      <td>1.66</td>\n",
              "      <td>3.59</td>\n",
              "      <td>5.04</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3100</td>\n",
              "      <td>3096</td>\n",
              "      <td>3100-3096</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>26/05/2012</td>\n",
              "      <td>22:30</td>\n",
              "      <td>Flamengo RJ</td>\n",
              "      <td>Internacional</td>\n",
              "      <td>3.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>D</td>\n",
              "      <td>...</td>\n",
              "      <td>4.20</td>\n",
              "      <td>1.99</td>\n",
              "      <td>3.23</td>\n",
              "      <td>3.74</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3101</td>\n",
              "      <td>3095</td>\n",
              "      <td>3101-3095</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>26/05/2012</td>\n",
              "      <td>22:30</td>\n",
              "      <td>Portuguesa</td>\n",
              "      <td>Vasco</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>A</td>\n",
              "      <td>...</td>\n",
              "      <td>2.70</td>\n",
              "      <td>2.62</td>\n",
              "      <td>3.22</td>\n",
              "      <td>2.54</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3102</td>\n",
              "      <td>3099</td>\n",
              "      <td>3102-3099</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>27/05/2012</td>\n",
              "      <td>01:00</td>\n",
              "      <td>Nautico</td>\n",
              "      <td>Cruzeiro</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>D</td>\n",
              "      <td>...</td>\n",
              "      <td>2.80</td>\n",
              "      <td>2.67</td>\n",
              "      <td>3.18</td>\n",
              "      <td>2.55</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3103</td>\n",
              "      <td>3098</td>\n",
              "      <td>3103-3098</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>27/05/2012</td>\n",
              "      <td>20:00</td>\n",
              "      <td>Atletico-MG</td>\n",
              "      <td>Corinthians</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>H</td>\n",
              "      <td>...</td>\n",
              "      <td>4.09</td>\n",
              "      <td>2.08</td>\n",
              "      <td>3.28</td>\n",
              "      <td>3.43</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3104</td>\n",
              "      <td>3094</td>\n",
              "      <td>3104-3094</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>27/05/2012</td>\n",
              "      <td>20:00</td>\n",
              "      <td>Coritiba</td>\n",
              "      <td>Botafogo RJ</td>\n",
              "      <td>2.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>A</td>\n",
              "      <td>...</td>\n",
              "      <td>4.84</td>\n",
              "      <td>1.77</td>\n",
              "      <td>3.60</td>\n",
              "      <td>4.15</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3105</td>\n",
              "      <td>3093</td>\n",
              "      <td>3105-3093</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>27/05/2012</td>\n",
              "      <td>20:00</td>\n",
              "      <td>Santos</td>\n",
              "      <td>Sport Recife</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>D</td>\n",
              "      <td>...</td>\n",
              "      <td>9.52</td>\n",
              "      <td>1.41</td>\n",
              "      <td>4.17</td>\n",
              "      <td>7.46</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3106</td>\n",
              "      <td>3091</td>\n",
              "      <td>3106-3091</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>27/05/2012</td>\n",
              "      <td>20:00</td>\n",
              "      <td>Sao Paulo</td>\n",
              "      <td>Bahia</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>H</td>\n",
              "      <td>...</td>\n",
              "      <td>7.91</td>\n",
              "      <td>1.44</td>\n",
              "      <td>4.12</td>\n",
              "      <td>6.93</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3107</td>\n",
              "      <td>3097</td>\n",
              "      <td>3107-3097</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>27/05/2012</td>\n",
              "      <td>22:30</td>\n",
              "      <td>Fluminense</td>\n",
              "      <td>Figueirense</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>D</td>\n",
              "      <td>...</td>\n",
              "      <td>6.02</td>\n",
              "      <td>1.65</td>\n",
              "      <td>3.61</td>\n",
              "      <td>5.08</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3108</td>\n",
              "      <td>3092</td>\n",
              "      <td>3108-3092</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>27/05/2012</td>\n",
              "      <td>22:30</td>\n",
              "      <td>Gremio</td>\n",
              "      <td>Palmeiras</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>H</td>\n",
              "      <td>...</td>\n",
              "      <td>4.26</td>\n",
              "      <td>1.97</td>\n",
              "      <td>3.33</td>\n",
              "      <td>3.66</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3109</td>\n",
              "      <td>3090</td>\n",
              "      <td>3109-3090</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>06/06/2012</td>\n",
              "      <td>23:30</td>\n",
              "      <td>Atletico GO</td>\n",
              "      <td>Gremio</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>A</td>\n",
              "      <td>...</td>\n",
              "      <td>3.27</td>\n",
              "      <td>2.28</td>\n",
              "      <td>3.26</td>\n",
              "      <td>2.96</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3100</td>\n",
              "      <td>3109</td>\n",
              "      <td>3100-3109</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>06/06/2012</td>\n",
              "      <td>23:30</td>\n",
              "      <td>Sport Recife</td>\n",
              "      <td>Palmeiras</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>H</td>\n",
              "      <td>...</td>\n",
              "      <td>2.90</td>\n",
              "      <td>2.46</td>\n",
              "      <td>3.17</td>\n",
              "      <td>2.77</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3091</td>\n",
              "      <td>3090</td>\n",
              "      <td>3091-3090</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>07/06/2012</td>\n",
              "      <td>00:30</td>\n",
              "      <td>Atletico-MG</td>\n",
              "      <td>Bahia</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>D</td>\n",
              "      <td>...</td>\n",
              "      <td>9.00</td>\n",
              "      <td>1.43</td>\n",
              "      <td>4.13</td>\n",
              "      <td>7.23</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3104</td>\n",
              "      <td>3097</td>\n",
              "      <td>3104-3097</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>07/06/2012</td>\n",
              "      <td>00:30</td>\n",
              "      <td>Coritiba</td>\n",
              "      <td>Portuguesa</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>H</td>\n",
              "      <td>...</td>\n",
              "      <td>6.00</td>\n",
              "      <td>1.59</td>\n",
              "      <td>3.72</td>\n",
              "      <td>5.37</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3105</td>\n",
              "      <td>3102</td>\n",
              "      <td>3105-3102</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>07/06/2012</td>\n",
              "      <td>00:30</td>\n",
              "      <td>Vasco</td>\n",
              "      <td>Nautico</td>\n",
              "      <td>4.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>H</td>\n",
              "      <td>...</td>\n",
              "      <td>10.00</td>\n",
              "      <td>1.37</td>\n",
              "      <td>4.40</td>\n",
              "      <td>8.19</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3099</td>\n",
              "      <td>3103</td>\n",
              "      <td>3099-3103</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>07/06/2012</td>\n",
              "      <td>01:50</td>\n",
              "      <td>Internacional</td>\n",
              "      <td>Sao Paulo</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>H</td>\n",
              "      <td>...</td>\n",
              "      <td>4.75</td>\n",
              "      <td>1.86</td>\n",
              "      <td>3.41</td>\n",
              "      <td>4.03</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3095</td>\n",
              "      <td>3107</td>\n",
              "      <td>3095-3107</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>07/06/2012</td>\n",
              "      <td>01:50</td>\n",
              "      <td>Ponte Preta</td>\n",
              "      <td>Flamengo RJ</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>D</td>\n",
              "      <td>...</td>\n",
              "      <td>2.94</td>\n",
              "      <td>2.55</td>\n",
              "      <td>3.21</td>\n",
              "      <td>2.67</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3096</td>\n",
              "      <td>3101</td>\n",
              "      <td>3096-3101</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>07/06/2012</td>\n",
              "      <td>01:50</td>\n",
              "      <td>Santos</td>\n",
              "      <td>Fluminense</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>D</td>\n",
              "      <td>...</td>\n",
              "      <td>4.00</td>\n",
              "      <td>2.02</td>\n",
              "      <td>3.23</td>\n",
              "      <td>3.63</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3106</td>\n",
              "      <td>3108</td>\n",
              "      <td>3106-3108</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>08/06/2012</td>\n",
              "      <td>01:00</td>\n",
              "      <td>Botafogo RJ</td>\n",
              "      <td>Cruzeiro</td>\n",
              "      <td>2.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>A</td>\n",
              "      <td>...</td>\n",
              "      <td>4.09</td>\n",
              "      <td>2.02</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.58</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3093</td>\n",
              "      <td>3098</td>\n",
              "      <td>3093-3098</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>08/06/2012</td>\n",
              "      <td>01:00</td>\n",
              "      <td>Corinthians</td>\n",
              "      <td>Figueirense</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>D</td>\n",
              "      <td>...</td>\n",
              "      <td>6.50</td>\n",
              "      <td>1.56</td>\n",
              "      <td>3.77</td>\n",
              "      <td>5.68</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3094</td>\n",
              "      <td>3092</td>\n",
              "      <td>3094-3092</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>30 rows Ã— 25 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4ae1bd23-6c92-49b8-a0d9-6e3ed72703eb')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-4ae1bd23-6c92-49b8-a0d9-6e3ed72703eb button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-4ae1bd23-6c92-49b8-a0d9-6e3ed72703eb');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-1f5a5a20-aafd-4e0b-9475-e09c64639731\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1f5a5a20-aafd-4e0b-9475-e09c64639731')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-1f5a5a20-aafd-4e0b-9475-e09c64639731 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df"
            }
          },
          "metadata": {},
          "execution_count": 2
        }
      ],
      "source": [
        "\n",
        "# Create a unique ID for each team\n",
        "codigotimes = 3090\n",
        "teams = pd.concat([df['Home'], df['Away']]).unique()\n",
        "team_ids = {team: i for i, team in enumerate(teams)}\n",
        "\n",
        "# Map the team IDs to the 'Home Team' and 'Away Team' columns\n",
        "df['Home Team ID'] = df['Home'].map(team_ids)\n",
        "df['Away Team ID'] = df['Away'].map(team_ids)\n",
        "\n",
        "df['Home Team ID'] += codigotimes\n",
        "df['Away Team ID'] += codigotimes\n",
        "df['Cod Match']= df['Home Team ID'].astype(str) + \"-\" + df['Away Team ID'].astype(str)\n",
        "# Display the updated DataFrame with team IDs\n",
        "print(df[['Home', 'Home Team ID', 'Away', 'Away Team ID']].head(30))\n",
        "\n",
        "df.head(30)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 442
        },
        "collapsed": true,
        "id": "VpAJ8Mf7m6PQ",
        "outputId": "6811a571-7f4f-4883-d088-db7d513549cc"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Tabela de resultados por time:\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     Country   League  Season         Home                     Res  count  \\\n",
              "0     Brazil  Serie A    2012  Atletico GO  DERROTA/DENTRO DE CASA     11   \n",
              "1     Brazil  Serie A    2012  Atletico GO  VITORIA/DENTRO DE CASA      5   \n",
              "2     Brazil  Serie A    2012  Atletico GO   EMPATE/DENTRO DE CASA      3   \n",
              "3     Brazil  Serie A    2012  Atletico-MG  VITORIA/DENTRO DE CASA     14   \n",
              "4     Brazil  Serie A    2012  Atletico-MG   EMPATE/DENTRO DE CASA      5   \n",
              "...      ...      ...     ...          ...                     ...    ...   \n",
              "1638  Brazil  Serie A    2025          NaN    DERROTA/FORA DE CASA      4   \n",
              "1639  Brazil  Serie A    2025          NaN     EMPATE/FORA DE CASA      1   \n",
              "1640  Brazil  Serie A    2025          NaN    DERROTA/FORA DE CASA      4   \n",
              "1641  Brazil  Serie A    2025          NaN    DERROTA/FORA DE CASA      3   \n",
              "1642  Brazil  Serie A    2025          NaN     EMPATE/FORA DE CASA      2   \n",
              "\n",
              "              Away Time_Referente  \n",
              "0              NaN    Atletico GO  \n",
              "1              NaN    Atletico GO  \n",
              "2              NaN    Atletico GO  \n",
              "3              NaN    Atletico-MG  \n",
              "4              NaN    Atletico-MG  \n",
              "...            ...            ...  \n",
              "1638  Sport Recife   Sport Recife  \n",
              "1639  Sport Recife   Sport Recife  \n",
              "1640         Vasco          Vasco  \n",
              "1641       Vitoria        Vitoria  \n",
              "1642       Vitoria        Vitoria  \n",
              "\n",
              "[1643 rows x 8 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-20b18e99-bcdb-472c-9af0-d4cd026c4f29\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Country</th>\n",
              "      <th>League</th>\n",
              "      <th>Season</th>\n",
              "      <th>Home</th>\n",
              "      <th>Res</th>\n",
              "      <th>count</th>\n",
              "      <th>Away</th>\n",
              "      <th>Time_Referente</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>Atletico GO</td>\n",
              "      <td>DERROTA/DENTRO DE CASA</td>\n",
              "      <td>11</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Atletico GO</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>Atletico GO</td>\n",
              "      <td>VITORIA/DENTRO DE CASA</td>\n",
              "      <td>5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Atletico GO</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>Atletico GO</td>\n",
              "      <td>EMPATE/DENTRO DE CASA</td>\n",
              "      <td>3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Atletico GO</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>Atletico-MG</td>\n",
              "      <td>VITORIA/DENTRO DE CASA</td>\n",
              "      <td>14</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Atletico-MG</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2012</td>\n",
              "      <td>Atletico-MG</td>\n",
              "      <td>EMPATE/DENTRO DE CASA</td>\n",
              "      <td>5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Atletico-MG</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1638</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2025</td>\n",
              "      <td>NaN</td>\n",
              "      <td>DERROTA/FORA DE CASA</td>\n",
              "      <td>4</td>\n",
              "      <td>Sport Recife</td>\n",
              "      <td>Sport Recife</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1639</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2025</td>\n",
              "      <td>NaN</td>\n",
              "      <td>EMPATE/FORA DE CASA</td>\n",
              "      <td>1</td>\n",
              "      <td>Sport Recife</td>\n",
              "      <td>Sport Recife</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1640</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2025</td>\n",
              "      <td>NaN</td>\n",
              "      <td>DERROTA/FORA DE CASA</td>\n",
              "      <td>4</td>\n",
              "      <td>Vasco</td>\n",
              "      <td>Vasco</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1641</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2025</td>\n",
              "      <td>NaN</td>\n",
              "      <td>DERROTA/FORA DE CASA</td>\n",
              "      <td>3</td>\n",
              "      <td>Vitoria</td>\n",
              "      <td>Vitoria</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1642</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>Serie A</td>\n",
              "      <td>2025</td>\n",
              "      <td>NaN</td>\n",
              "      <td>EMPATE/FORA DE CASA</td>\n",
              "      <td>2</td>\n",
              "      <td>Vitoria</td>\n",
              "      <td>Vitoria</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1643 rows Ã— 8 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-20b18e99-bcdb-472c-9af0-d4cd026c4f29')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-20b18e99-bcdb-472c-9af0-d4cd026c4f29 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-20b18e99-bcdb-472c-9af0-d4cd026c4f29');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-a1c5f544-0174-45b2-8672-23aece6bda6e\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a1c5f544-0174-45b2-8672-23aece6bda6e')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-a1c5f544-0174-45b2-8672-23aece6bda6e button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "manlydf",
              "summary": "{\n  \"name\": \"manlydf\",\n  \"rows\": 1643,\n  \"fields\": [\n    {\n      \"column\": \"Country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Brazil\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"League\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Serie A\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Season\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 2012,\n        \"max\": 2025,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          2021\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Home\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 37,\n        \"samples\": [\n          \"Sao Paulo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Res\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"DERROTA/DENTRO DE CASA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 1,\n        \"max\": 17,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          11\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Away\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 37,\n        \"samples\": [\n          \"Sao Paulo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Time_Referente\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 37,\n        \"samples\": [\n          \"Sao Paulo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 3
        }
      ],
      "source": [
        "print (\"Tabela de resultados por time:\")\n",
        "newdf1 = df.groupby(['Country','League','Season','Home'])['Res'].value_counts().reset_index()\n",
        "newdf1['Res'] =  newdf1['Res'].replace('A','DERROTA/DENTRO DE CASA')\n",
        "newdf1['Res'] =  newdf1['Res'].replace('D','EMPATE/DENTRO DE CASA')\n",
        "newdf1['Res'] =  newdf1['Res'].replace('H','VITORIA/DENTRO DE CASA')\n",
        "\n",
        "newdf2 = df.groupby(['Country','League','Season','Away'])['Res'].value_counts().reset_index()\n",
        "newdf2['Res'] =  newdf2['Res'].replace('A','VITORIA/FORA DE CASA')\n",
        "newdf2['Res'] =  newdf2['Res'].replace('D','EMPATE/FORA DE CASA')\n",
        "newdf2['Res'] =  newdf2['Res'].replace('H','DERROTA/FORA DE CASA')\n",
        "\n",
        "\n",
        "manlydf = pd.concat([newdf1, newdf2], ignore_index=True)\n",
        "manlydf['Time_Referente'] = manlydf['Home'].combine_first(manlydf['Away'])\n",
        "savemanly = manlydf.to_csv('manlydf.csv', index=False)\n",
        "manlydf.head(2000)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "p9cco219KIJL"
      },
      "source": [
        "///"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 151,
          "referenced_widgets": [
            "b93dadddbb4f4c7696d17bb92115187f",
            "59b5340063a74bd886577a6c2d3d5af4",
            "663668bd6a954215a5f0a84e4fc402d7",
            "41931392ac2b48e3b2c778cc655c842d",
            "2be3239006a84c01b49a7c3dbfde3bc0",
            "2c339e85f6794097b2d31fd48a8d4cf9",
            "2f06758248c642ba89e1e25b450c3e8b",
            "71fc2c91db2f422aa264d0320b43fbb2",
            "95cc1f44e51e4e6c88089358fac60d82"
          ]
        },
        "collapsed": true,
        "id": "p_jPpNnbT7jA",
        "outputId": "f9343808-a06d-4633-b0b6-d4279af2c276"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "interactive(children=(SelectMultiple(description='Times:', layout=Layout(width='50%'), options=('America MG', â€¦"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "b93dadddbb4f4c7696d17bb92115187f"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Output(layout=Layout(border='1px solid black', overflow_x='auto', width='100%'))"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "71fc2c91db2f422aa264d0320b43fbb2"
            }
          },
          "metadata": {}
        }
      ],
      "source": [
        "import pandas as pd  # pandas pra mexer com tabelas e dados\n",
        "import matplotlib.pyplot as plt  # matplotlib pra fazer os grÃ¡ficos\n",
        "import seaborn as sns  # seaborn deixa os grÃ¡ficos mais bonitinhos\n",
        "import ipywidgets as widgets  # widgets pra criar interface interativa no notebook\n",
        "from IPython.display import display  # pra mostrar coisas interativas no Jupyter\n",
        "\n",
        "# Aqui a gente garante que a coluna 'Season' tÃ¡ como nÃºmero inteiro\n",
        "# (Ã s vezes ela vem como texto, aÃ­ dÃ¡ ruim nos grÃ¡ficos)\n",
        "manlydf['Season'] = manlydf['Season'].astype(int)\n",
        "\n",
        "# Criando o widget onde o usuÃ¡rio pode escolher vÃ¡rios times\n",
        "times_widget = widgets.SelectMultiple(\n",
        "    options=sorted(manlydf['Time_Referente'].unique()),  # pega todos os times Ãºnicos da coluna 'Home' (time da casa)\n",
        "    description='Times:',  # label que vai aparecer do lado\n",
        "    style={'description_width': 'initial'},  # sÃ³ pra nÃ£o cortar o texto do label\n",
        "    layout=widgets.Layout(width='50%'),  # largura do widget (pra nÃ£o ficar esticado ou pequeno demais)\n",
        ")\n",
        "\n",
        "# Criando um \"output\" que vai segurar o grÃ¡fico, com barra de rolagem se for preciso\n",
        "output = widgets.Output(layout={\n",
        "    'border': '1px solid black',  # sÃ³ pra deixar com uma bordinha legal\n",
        "    'overflow_x': 'auto',  # ativa a rolagem horizontal\n",
        "    'width': '100%'  # ocupa toda a largura disponÃ­vel\n",
        "})\n",
        "\n",
        "# FunÃ§Ã£o que desenha o grÃ¡fico com barra de rolagem e mostrando todos os anos no eixo X\n",
        "def plot_grafico_com_scroll(times_selecionados):\n",
        "    with output:  # tudo que for printado ou plotado aqui vai aparecer dentro do \"output\"\n",
        "        output.clear_output()  # limpa o grÃ¡fico anterior pra nÃ£o empilhar tudo\n",
        "        if not times_selecionados:\n",
        "            print(\"Por favor, selecione pelo menos um time.\")\n",
        "            return\n",
        "\n",
        "        # filtra sÃ³ os jogos em casa dos times escolhidos\n",
        "        df_filtrado = manlydf[manlydf['Time_Referente'].isin(times_selecionados)]\n",
        "\n",
        "        # agrupa por temporada e resultado (VitÃ³ria/Empate/Derrota) e soma a contagem\n",
        "        df_grouped = df_filtrado.groupby(['Season', 'Res'], as_index=False)['count'].sum()\n",
        "\n",
        "        plt.figure(figsize=(12, 6))  # define o tamanho do grÃ¡fico (um pouco mais largo)\n",
        "        sns.lineplot(data=df_grouped, x='Season', y='count', hue='Res', marker='o')\n",
        "\n",
        "        # mostra todos os anos no eixo X (mesmo se faltar dado em algum)\n",
        "        temporadas = sorted(manlydf['Season'].unique())\n",
        "        plt.xticks(temporadas)\n",
        "\n",
        "        # tÃ­tulo e outras frescurinhas do grÃ¡fico\n",
        "        plt.title(f'Contagem de Resultados por Temporada\\nTimes: {\", \".join(times_selecionados)}')\n",
        "        plt.xlabel('Temporada')\n",
        "        plt.ylabel('Contagem de Resultados')\n",
        "        plt.grid(True)\n",
        "        plt.legend(title='Resultado')\n",
        "        plt.tight_layout()\n",
        "        plt.show()\n",
        "\n",
        "# Mostra o widget de seleÃ§Ã£o dos times e o grÃ¡fico com rolagem\n",
        "#display(times_widget)  # mostra a caixinha pra escolher os times\n",
        "widgets.interact(plot_grafico_com_scroll, times_selecionados=times_widget)  # conecta o widget com a funÃ§Ã£o\n",
        "display(output)  # mostra o espaÃ§o onde o grÃ¡fico vai aparecer"
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNsPDbLZk+F/rzJNyYPYP1l",
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    },
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "b93dadddbb4f4c7696d17bb92115187f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [
              "widget-interact"
            ],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "VBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "VBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_59b5340063a74bd886577a6c2d3d5af4",
              "IPY_MODEL_663668bd6a954215a5f0a84e4fc402d7"
            ],
            "layout": "IPY_MODEL_41931392ac2b48e3b2c778cc655c842d"
          }
        },
        "59b5340063a74bd886577a6c2d3d5af4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SelectMultipleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "SelectMultipleModel",
            "_options_labels": [
              "America MG",
              "Athletico-PR",
              "Atletico GO",
              "Atletico-MG",
              "Avai",
              "Bahia",
              "Botafogo RJ",
              "Bragantino",
              "CSA",
              "Ceara",
              "Chapecoense-SC",
              "Corinthians",
              "Coritiba",
              "Criciuma",
              "Cruzeiro",
              "Cuiaba",
              "Figueirense",
              "Flamengo RJ",
              "Fluminense",
              "Fortaleza",
              "Goias",
              "Gremio",
              "Internacional",
              "Joinville",
              "Juventude",
              "Mirassol",
              "Nautico",
              "Palmeiras",
              "Parana",
              "Ponte Preta",
              "Portuguesa",
              "Santa Cruz",
              "Santos",
              "Sao Paulo",
              "Sport Recife",
              "Vasco",
              "Vitoria"
            ],
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "SelectMultipleView",
            "description": "Times:",
            "description_tooltip": null,
            "disabled": false,
            "index": [],
            "layout": "IPY_MODEL_2be3239006a84c01b49a7c3dbfde3bc0",
            "rows": 5,
            "style": "IPY_MODEL_2c339e85f6794097b2d31fd48a8d4cf9"
          }
        },
        "663668bd6a954215a5f0a84e4fc402d7": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_model_name": "OutputModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/output",
            "_view_module_version": "1.0.0",
            "_view_name": "OutputView",
            "layout": "IPY_MODEL_2f06758248c642ba89e1e25b450c3e8b",
            "msg_id": "",
            "outputs": []
          }
        },
        "41931392ac2b48e3b2c778cc655c842d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "2be3239006a84c01b49a7c3dbfde3bc0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": "50%"
          }
        },
        "2c339e85f6794097b2d31fd48a8d4cf9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": "initial"
          }
        },
        "2f06758248c642ba89e1e25b450c3e8b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "71fc2c91db2f422aa264d0320b43fbb2": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_model_name": "OutputModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/output",
            "_view_module_version": "1.0.0",
            "_view_name": "OutputView",
            "layout": "IPY_MODEL_95cc1f44e51e4e6c88089358fac60d82",
            "msg_id": "",
            "outputs": [
              {
                "output_type": "stream",
                "name": "stdout",
                "text": [
                  "Por favor, selecione pelo menos um time.\n"
                ]
              }
            ]
          }
        },
        "95cc1f44e51e4e6c88089358fac60d82": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": "1px solid black",
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": "auto",
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": "100%"
          }
        }
      }
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}